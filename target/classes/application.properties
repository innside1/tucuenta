#Puerto de la aplicacion
server.port=8100

#Respuesta
api.respuesta.datos=Datos de respuesta de una peticion http
api.respuesta.error=Error producido
api.respuesta.error.codigo=Codigo de error
api.respuesta.error.mensaje=Mensaje de error

#EndPoints
endpoint.tucuenta.v1.factura.procesar.path=/v1/factura/procesar

#MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/tucuenta?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/tucuenta
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false

# drop n create table, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.id.new_generator_mappings = true
#spring.jpa.properties.hibernate.format_sql = true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 